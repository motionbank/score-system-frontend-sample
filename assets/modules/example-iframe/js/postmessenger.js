/**
 *	A window.postMessage() middleware inspired by connect.
 *
 *	Mothership: https://github.com/fjenett/postmessanger-js
 *	Made possible (in parts) by: http://motionbank.org
 *
 *	Started: fjenett 20130401
 *	Version: 0.0.1
 *	Build: 70
 */
if(!(module&&"exports"in module))var module={exports:{}};if(!window)throw"PostMessenger can only run in a window context.";
var PostMessenger=module.exports=function(i){var l=(new Date).getTime(),j=function(a,d,f,b){return!(1===arguments.length&&"object"===typeof a)?{name:a,data:d,receiver:f,receiverOrigin:b}:a},k=function(a,d,f,b,c,e){this.id=a;var g=this;this.test=function(a){return d.apply(g,[a])};this.callback=f;this.context=b;this.nameAlias=c;this.dataAlias=e};k.prototype={handle:function(a){if("string"===typeof a.data){var d=a.dataParsed=JSON.parse(a.data);if(this.nameAlias in d&&this.test(d[this.nameAlias])){var f=
this;this.callback.apply(this.context,[new m(this,a),{send:function(){var b=j.apply(null,arguments);b.receiver=a.source;b.receiverOrigin=a.origin;b.nameAlias=b.nameAlias||f.nameAlias;b.dataAlias=b.dataAlias||f.dataAlias;b.callback=b.context||f.context;h.prototype.send.apply(h,[b])}}]);return!0}return!1}}};var m=function(a,d){this.name=d.dataParsed[a.nameAlias];this.data=d.dataParsed[a.dataAlias];this.source=d.source;this.origin=d.origin;this.message=d;this.params={}},h=function(a){this.hash=btoa("PM"+
++l).toUpperCase();this.allowedOrigins=[];this.matchers=[];this.receivers=[];this.connected=!1;a?(this.win=a,this.winOrigin=this.win.location.protocol+"//"+this.win.location.host,this.accept(this.winOrigin),this.connect()):this.winOrigin=i.location.protocol+"//"+i.location.host};h.prototype={accept:function(){if(0===arguments.length)this.accept(this.winOrigin);else if(1===arguments.length)if("string"===typeof arguments[0])this.allowedOrigins.push(arguments[0]);else{if("[object Array]"===Object.prototype.toString.call(arguments[0])&&
0<arguments[0].length)for(var a=0,d=arguments[0].length;a<d;a++)this.accept(arguments[0][a])}else if(1<arguments.length){a=0;for(d=arguments.length;a<d;a++)this.accept(arguments[a])}},on:function(a,d,f){var b=!(1===arguments.length&&"object"===typeof a)?{matcher:a,callback:d,context:f}:a;b.nameAlias=b.nameAlias||"name";b.dataAlias=b.dataAlias||"data";var c=function(){return!1};if("string"===typeof b.matcher)c=function(a){return a===b.matcher};else if("[object RegExp]"===Object.prototype.toString.call(b.matcher))c=
function(a){return a.match(b.matcher)};else throw"Matcher can only be a string or regex";if("function"!==typeof b.callback)throw"Callback needs to be a function";b.context||(b.context=null);c=new k(b.matcher,c,b.callback,b.context,b.nameAlias,b.dataAlias);this.matchers.push(c);return c},connect:function(){this.win.addEventListener("message",function(a){return function(d){a.connected&&function(a){if(-1!==this.allowedOrigins.indexOf(a.origin))for(var b=!1,c=0,d=this.matchers.length;c<d;c++)b=b||this.matchers[c].handle(a);
else console.log("Origin did not match: ",a.origin,this.allowedOrigins)}.apply(a,[d])}}(this));this.connected=!0},disconnect:function(){this.connected=!1},to:function(a){a&&("object"===typeof a&&"postMessage"in a)&&this.receivers.push(a)},send:function(a,d,f,b){var c=j.apply(null,arguments);c.receiverOrigin=c.receiverOrigin||this.winOrigin;c.nameAlias=c.nameAlias||"name";c.dataAlias=c.dataAlias||"data";var e={};e[c.nameAlias]=c.name;e[c.dataAlias]=c.data;if(c.args&&"object"===typeof c.args)for(var g in c.args)g in
e||(e[g]=c.args[g]);if(c.receiver)e=JSON.stringify(e),"postMessage"in c.receiver&&c.receiver.postMessage&&c.receiver.postMessage(e,c.receiverOrigin);else if(0<this.receivers.length){var e=JSON.stringify(e),h=0;for(g=this.receivers.length;h<g;h++)this.receivers[0].postMessage(e,c.receiverOrigin)}}};return h}(window);